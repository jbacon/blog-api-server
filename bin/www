#!/usr/bin/env node

var app = require("../app")
// var debug = require("debug")("ApiServer:server")
var http = require("http")
const commonConfig = require("../common/configUtil")
const mongoUtil = require('../common/mongoUtil')
const logger = require('../common/loggingUtil').appLogger
const errorUtil = require('../common/errorUtil')

var port = normalizePort(commonConfig.serverPort || "3000")
app.set("port", port)

var server = http.createServer(app)
server.listen(port)
server.on("error", onError)
server.on("listening", onListening)

function normalizePort(val) {
	var port = parseInt(val, 10)
	if (isNaN(port))
		return val
	if (port >= 0)
		return port
	return false
}
function onError(error) {
	if (error.syscall !== "listen") {
		throw error
	}
	var bind = typeof port === "string"
		? "Pipe " + port
		: "Port " + port

	// handle specific listen errors with friendly messages
	switch (error.code) {
	case "EACCES":
		logger.error(bind + " requires elevated privileges")
		process.exit(1)
		break
	case "EADDRINUSE":
		logger.error(bind + " is already in use")
		process.exit(1)
		break
	default:
		throw error
	}
}
function onListening() {
	var addr = server.address()
	var bind = typeof addr === "string"
		? "pipe " + addr
		: "port " + addr.port
	logger.info("Listening on " + bind)
}
