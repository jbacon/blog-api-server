apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "fullname" . }}-api
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    time: {{ .Release.Time.Seconds | quote }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 20
  progressDeadlineSeconds: 30
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-api
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        time: {{ .Release.Time.Seconds | quote }}
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 300
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets }}
      {{- end }}
      containers:
        - name: {{ template "fullname" . }}-api
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext:
            runAsUser: 1000
          env:
            - name: NODE_ENV
              value: {{ .Values.nodeEnv }}
            - name: PORTFOLIO_CONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.configSecret }}
                  key: config-password
          volumeMounts:
            {{- if .Values.codeOverrideDirectory }}
            - name: code
              mountPath: /home/node/app/
              # readOnly: true
            {{- end }}
          ports:
            - name: api
              containerPort: 3000
              protocol: TCP
            - name: debug
              containerPort: 9229
              protocol: TCP
          resources: {{ "\n" }}
            {{- toYaml .Values.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
              # httpHeaders:
              #   - name: X-Custom-Header
              #     value: Awesome
            initialDelaySeconds: 30
            periodSeconds: 15
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
              # httpHeaders:
              #   - name: X-Custom-Header
              #     value: Awesome
            initialDelaySeconds: 30
            periodSeconds: 15
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 3
      volumes:
        {{- if .Values.codeOverrideDirectory }}
        - name: code
          hostPath:
            type: Directory
            path: {{- .Values.codeOverrideDirectory }}
        {{- end }}